@using AllenKRyansCOSC481.Models;

@model IEnumerable<AllenKRyansCOSC481.Models.Item>
@{
    ViewBag.Title = "OrderOnline";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<center><h2>Order Online</h2></center>
<div class="navbar navbar-default">
    <div class="container">
        <!-- needs a class -->
        <div class="">
            <ul class="nav navbar-nav navcent">
                @{
                    // Get the item types from the DB
                    List<Item> items = new List<Item>(Model);

                    // Get all the unique item types
                    var itemTypes = items?.Select(item => item.Type)?.Distinct()?.ToList() ?? new List<ItemType>();
                    var itemDescriptions = new List<string>();

                    // Print each of the item types
                    for (int itemTypeIndex = 0; itemTypeIndex < itemTypes.Count; itemTypeIndex++)
                    {
                        // Print the enum descriptions
                        @Html.Raw($"<li><a class=\"hoverable\" id=\"grp{itemTypeIndex + 1}\" onclick=\"visibility({itemTypeIndex + 1})\">{itemTypes[itemTypeIndex].GetDescription()}</a></li>");
                    }
                }
            </ul>
        </div>
    </div>
</div>

<div class="item-container">
    <!-- to be replaced with automated divs formed from DB -->

    @{
        // Initialize the variables
        int start = 0;
        ItemType old = ItemType.BAD_DATA;
        const string grp = "itemGroup";
        int igrp = 1;

        // Go over each item and print it
        for (int i = 0; i < items.Count; i++)
        {
            // Each time we change a type then we print it under a different grouping
            if (old != items[i].Type)
            {
                // We reset the type
                old = items[i].Type;

                // If it is 0 then create the div
                if (i == 0)
                {
                    @Html.Raw("<div id='" + grp + igrp + "'>"); //open first item group
                }
                // Otherwise end it
                else
                {
                    start = 0;
                    @Html.Raw("</div>"); //end previous row
                    @Html.Raw("</div>"); //end previous itemgroup
                    @Html.Raw("<div id='" + grp + igrp + "' style='display: none;'>"); //open not first item group
                }
                igrp++;
                // Print out the item type
                @Html.Raw($"<h1>{items[i].Type.GetDescription()}</h1>")
                @Html.Raw("<div class='row'>"); //begin first row div
            }

            @Html.Raw("<div class='item'>"); //begin item div
            @Html.Raw("<h3>" + items[i].Name + "</h3>");
            @Html.Raw("<p style='text-align: justify;'>" + items[i].Description + "</p>");
            @Html.Raw("<p>$" + items[i].Price.ToString("0.00") + "</p>");

            // Post method to adding an item into a cart
            using (Html.BeginForm("AddToCart", "OrderOnline", FormMethod.Post))
            {
                @Html.TextBox("quantity", 1, new { @type = "number", min = 1, max = 10, @class = "nmbrsz" });
                <input type="hidden" name="itemId" value="@items[i].ID" />
                <input type="submit" name="AddToCart" value="Add to Cart" />
            }
            <br />

            @Html.Raw("</div>"); //end item div

            start++;
            if (start % 3 == 0)
            {
                @Html.Raw("</div>"); //end row div
                @Html.Raw("<div class='row'>"); //begin not first row div
            }
        }
    }
    @Html.Raw("</div>"); // end last item group div

    @Html.Raw("</div>")
</div>
@Html.Raw("<input type='hidden' id='ocount' name='ocount' value='" + igrp + "'/>")
<script src="~/Scripts/OrderPage.js"></script>
<div class="dspacer"></div>